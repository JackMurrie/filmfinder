-- MySQL Script generated by MySQL Workbench
-- Sat Oct 31 16:10:05 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema film_finder
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema film_finder
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `film_finder` DEFAULT CHARACTER SET utf8 ;
USE `film_finder` ;

-- -----------------------------------------------------
-- Table `film_finder`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`user` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `hash` INT NOT NULL,
  `profile_image_url` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `film_finder`.`follower`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`follower` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`follower` (
  `followed_id` INT NOT NULL,
  `follower_id` INT NOT NULL,
  PRIMARY KEY (`followed_id`, `follower_id`),
  INDEX `fk_follower_user2_idx` (`follower_id` ASC) VISIBLE,
  CONSTRAINT `fk_follower_user1`
    FOREIGN KEY (`followed_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_follower_user2`
    FOREIGN KEY (`follower_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `film_finder`.`watched`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`watched` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`watched` (
  `user_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `movie_id`),
  INDEX `fk_watched_movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_watched_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_watched_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `film_finder`.`movie` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `film_finder`.`wishlist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`wishlist` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`wishlist` (
  `user_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `movie_id`),
  INDEX `fk_wish_list_movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_wish_list_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_wish_list_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `film_finder`.`movie` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `film_finder`.`blacklist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`blacklist` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`blacklist` (
  `owner_id` INT NOT NULL,
  `blacklisted_id` INT NOT NULL,
  PRIMARY KEY (`owner_id`, `blacklisted_id`),
  INDEX `fk_blacklist_user2_idx` (`blacklisted_id` ASC) VISIBLE,
  CONSTRAINT `fk_blacklist_user1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_blacklist_user2`
    FOREIGN KEY (`blacklisted_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `film_finder`.`review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `film_finder`.`review` ;

CREATE TABLE IF NOT EXISTS `film_finder`.`review` (
  `rating` FLOAT NULL,
  `review` MEDIUMTEXT NULL,
  `user_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`user_id`, `movie_id`),
  INDEX `fk_review_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_review_movie1_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_review_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `film_finder`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `film_finder`.`movie` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
